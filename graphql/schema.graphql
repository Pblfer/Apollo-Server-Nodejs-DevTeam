# Valores por defecto
enum Plan {
  silver
  gold
  diamond
}

enum Roll {
  admin
  seller
}

enum City {
  Guatemala
  Colombia
}

enum ActualState {
  disponible
  reservado
  bloqueado
}

enum UserStatus {
  Activo
  Bloqueado
}

enum Etapas {
  PREV
  LANZ
  CONST
  FIN
}

enum OpcionBool {
  Si
  No
  Opcional
}

type Developer {
  _id: ID!
  name: String!
  plan: Plan!
  description: String
  phone_area: String
  phone: String
  email: String
  website: String
  social_fb: String
  social_ig: String
  social_linkedin: String
  img_logo: String
  img_header: String
  cc_token: String
  proyects: [Proyect]
  admins_team: [User]
  admin_email: String
  sellers_team: [User]
  clients: [Client]
}

type User {
  _id: ID!
  first_name: String
  last_name: String
  email: String!
  roll: Roll
  company: String
  company_id: String
  phone: String
  pic: String
  blocked: UserStatus
}

type Client {
  _id: ID!
  email: String!
  developerID: String!
  first_name: String
  last_name: String
  phone: String
  nit: String
}

type Discount {
  _id: ID!
  name: String!
  proyect_id: String!
  discount_amount: Int
  active: String
}

enum GalleryType {
  amenidades
  acabados
}

type Img {
  _id: ID
  image_name: String
  proyect_id: String!
  proyect_name: String!
  lat: Int
  long: Int
  img_url: String
  gallery_type: GalleryType
}

type Financing {
  _id: ID!
  name: String!
  interest_rate: Float
  years_max: Int
}

type Apartament {
  _id: ID!
  proyect_id: String!
  proyect_name: String!
  plane_img: String
  level: Int
  number: String!
  total_square_mts: Float
  living_square_mts: Float
  bedrooms: Int
  bathrooms: Int
  parkings: Int
  warehouse: Int
  loundry: OpcionBool
  balcony: OpcionBool
  kitchen_furniture: OpcionBool
  kitchen_appliances: OpcionBool
  closets: OpcionBool
  garden: OpcionBool
  price: Float
  price_with_tax: Float
  reserve_price: Float
  financing_types: [Financing]
  actual_state: ActualState
  lat: Float
  long: Float
}

type Level {
  _id: ID!
  proyectID: String!
  developerID: String!
  number_of_level: Int
  plane_img_url: String
  inventory: [Apartament]
}

type Parking {
  _id: ID!
  number: String!
  price: Int
  actual_state: ActualState
  proyectID: String
  developerID: String
}

type Warehouse {
  _id: ID!
  number: String!
  price: Int
  square_mts: Int
  actual_state: ActualState
  proyectID: String
  developerID: String
}

type Proyect {
  _id: ID!
  name: String!
  city: City!
  country: String
  zone: Int
  direction: String
  website: String
  general_description: String
  general_apartament_description: String
  total_of_levels: Int
  living_levels: Int
  total_apartaments: Int
  levels: [Level]
  parkings: [Parking]
  warehouses: [Warehouse]
  lat: Float
  long: Float
  financing_types: [Financing]
  fraction_reserved: Int
  company_id: String
  company_name: String
  deposit_percent: Int
  discounts: [Discount]
  header_img: String
  gallery: [Img]
  quote_logo: String
  quote_banner: String
  etapa: Etapas!
}

"""
⚡🚀Este es el listado de todos los Querys para el API de conversion,
encontrara emogis para recordar y visualizar de forma más rapida. 🛰
"""
type Query {
  "🏢🏢🏢 - Todas las Desarrolladoras"
  getAllDevelopers: [Developer]

  "☝🏢 - Obtener Desarrolladora por ID"
  getDeveloper(id: ID!): Developer

  "☝👨‍💻 - Obtener Usuario por ID"
  getUser(id: ID!): User

  "👨‍💻👩‍💻👩‍💼👨‍💼🦸‍🦸‍ - Obtener Todos los Usuarios"
  getAllUsers: [User]

  "📥🏢 - Obtener Todos los Niveles de un Proyecto"
  getProyect(proyectID: String!): Proyect

  "☝📥 - Obtener 1 Nivel especifico"
  getLevel(levelID: String!): Level

  "☝🚪 - Obtener 1 Apartamento especifico"
  getApartament(apartamentID: String!): Apartament
}

input DeveloperInput {
  name: String!
  email: String!
  website: String!
  plan: Plan!
  admin_email: String!
  description: String
  phone_area: String
  phone: String
  social_fb: String
  social_ig: String
  social_linkedin: String
  img_logo: String
  img_header: String
  cc_token: String
}

"""
⚡🚀Este es el listado de todas las Mutations para el API de conversion,
encontrara emogis para recordar y visualizar de forma más rapida. 🛰
"""
type Mutation {
  "🏢 - Crear Desarrolladora"
  newDeveloper(input: DeveloperInput!): Developer

  "👨‍💼 - Crear Usuario"
  newUser(
    email: String!
    password: String!
    first_name: String!
    last_name: String!
    company: String!
    company_id: String!
    phone: String!
    roll: Roll!
    blocked: UserStatus!
  ): User

  "🔐 - Login"
  login(username: String!, password: String!): LoginResponse

  "👨‍💼💼 - Agregar Usuario a Equipo de Ventas"
  addUserToSellersTeam(developerID: ID!, userID: ID!): Developer

  "🏢📝 - Actualizar perfil de Desarrolladora"
  updataDeveloperProfile(
    developerID: ID!
    objectField: String!
    value: String!
  ): Updated

  "👌🙌👨‍💼🏢 - Nuevo cliente para Desarrolladora"
  newClientToDeveloper(
    email: String!
    developerID: String!
    first_name: String!
    last_name: String!
    phone: String!
    nit: String!
  ): Client

  "🏢📝 - Actualizar perfil de Usuario"
  updateUserProfile(ID: ID!, objectField: String!, value: String!): Updated

  "❌👨‍💼👩‍💼 - Eliminar Vendedor"
  deleteSeller(developerID: ID!, userID: ID!): User

  "💰✂ - Agregar Descuento"
  newDiscountToProyect(
    name: String!
    company_id: String!
    proyect_id: String!
    discount_amount: Int!
    active: String!
  ): Discount

  "📥🏢 - Agregar Proyecto"
  newProyect(
    name: String!
    city: City!
    country: String!
    zone: Int
    direction: String!
    total_of_levels: Int!
    living_levels: Int!
    total_apartaments: Int!
    deposit_percent: Int!
    header_img: String!
    company_id: String!
    company_name: String!
    lat: Float!
    long: Float!
    website: String
    general_description: String
    general_apartament_description: String
    quote_logo: String
    quote_banner: String
    etapa: Etapas!
  ): Proyect

  "🏢🚪🚽📺 - Agregar Apartamento a Nivel especifico"
  addApartamentToLevel(
    levelID: String!
    proyect_id: String!
    proyect_name: String!
    plane_img: String!
    level: Int!
    number: String!
    apt_type: String!
    living_square_mts: Float!
    bedrooms: Int!
    bathrooms: Int!
    loundry: OpcionBool!
    balcony: OpcionBool!
    kitchen_furniture: OpcionBool!
    closets: OpcionBool!
    kitchen_appliances: OpcionBool!
    garden: OpcionBool!
    price: Float!
    price_with_tax: Float!
    reserve_price: Float!
    actual_state: ActualState!
    lat: Float!
    long: Float!
  ): Apartament

  "📃🚪 - Importar Apartamentos"
  importApartaments(
    developer_id: String!
    proyect_id: String!
    proyect_name: String!
    level: Int!
    number: String!
    apt_type: String!
    living_square_mts: Float!
    bedrooms: Int!
    bathrooms: Int!
    loundry: OpcionBool!
    balcony: OpcionBool!
    kitchen_furniture: OpcionBool!
    closets: OpcionBool!
    kitchen_appliances: OpcionBool!
    garden: OpcionBool!
    price: Float!
    actual_state: ActualState!
    lat: Float!
    long: Float!
  ): Apartament

  "🗃📃🏢 - Agregar Proyecto a Desarrolladora"
  addProyectToDeveloper(developerID: ID!, proyectID: ID!): Developer

  "🚗🏢 - Agregar Parqueo a Proyecto"
  addParkingToProyect(
    number: String!
    price: Int!
    actual_state: ActualState!
    proyectID: String!
    developerID: String!
  ): Parking

  "📦🏢 - Agregar Bodega a Proyecto"
  addWarehouseToProyect(
    number: String!
    price: Int!
    square_mts: Int!
    actual_state: ActualState!
    proyectID: String!
    developerID: String!
  ): Warehouse

  "🏛💵- Agregar un Financiamiento"
  newFinancingToProyect(
    name: String!, 
    interest_rate: Float!,
    years_max: Int!,
    proyectID: String!
    ): Financing

  "📥🏢 - Agregar Nivel a Proyecto"
  addLevelToProyect(
    developerID: String!
    proyectID: String!
    number_of_level: Int!
    plane_img_url: String!
  ): Level

  "📸🏢 - Agregar Imagen a Proyecto"
  addImageToProyect(
    image_name: String!
    proyect_id: String!
    proyect_name: String!
    lat: Float!
    long: Float!
    img_url: String!
    gallery_type: GalleryType!
  ): Img
}

type Updated {
  value: String
  objectField: String
}
type LoginResponse {
  token: String
  user: User
}
